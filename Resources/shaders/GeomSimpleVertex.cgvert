
struct app2vert {
  float4 color : COLOR;
  float4 tex0 : TEXCOORD0;
  float4 position : POSITION;
  float4 normal : NORMAL;
};

struct vert2frag {
  float4 tex0 : TEXCOORD0;
  float4 position : POSITION;
  float4 color : COLOR;
  float4 normal : TEXCOORD1;
  float4 fogInfo : TEXCOORD2;
};


float3 halfLambert(uniform float4 lightPosition,
          uniform float4 lightColor,
          uniform float4 vertPos,
          uniform float3 normalVec) {
  float3 lightVec = lightPosition.xyz-vertPos;  
  float dist = length(lightVec);
  lightVec = normalize(lightVec);
  float diffuse = (dot(normalVec,lightVec) * 0.6) + 0.4;
  diffuse = diffuse * diffuse;
  float attn = ((lightPosition.w /(dist*dist)));
  attn = clamp(attn,0.0,1.0);
  float3 retColor;
  retColor = lightColor.xyz * diffuse * attn * lightColor.w;
  return retColor;
}

vert2frag main(app2vert IN, uniform float4x4 modelViewProj,
        uniform float4x4 modelViewInverse,
        uniform float4x4 modelView,      
        uniform float4 lightPosition0,
        uniform float4 lightColor0,
        uniform float4 lightPosition1,
        uniform float4 lightColor1,
        uniform float4 lightPosition2,
        uniform float4 lightColor2,
        uniform float4 lightPosition3,
        uniform float4 lightColor3,
      uniform float3 ambientColor,
        uniform float3 fogColor,
        uniform float exposure) {

  vert2frag OUT;
  OUT.position = mul(modelViewProj, IN.position);
  OUT.tex0 = IN.tex0;
 
 
    OUT.normal = IN.normal;
  
  float4 v = mul(modelView, IN.position);
  float3 normalVec = normalize(mul(modelViewInverse, IN.normal).xyz);  
  
  float3 eyePos = float3(0.0, 0.0, 0.0);
  float vdist = length(eyePos-v);
  float3 eyeVec = normalize(eyePos-v);

  float fogAmt = saturate(pow(1.05, -(vdist * vdist * vdist)));

  float4 baseColor = IN.color;
  float4 fColor = baseColor;
  fColor.xyz =  baseColor * halfLambert(lightPosition0, lightColor0, v, normalVec);
  fColor.xyz +=  halfLambert(lightPosition1, lightColor1, v, normalVec);
  fColor.xyz +=  halfLambert(lightPosition2, lightColor2, v, normalVec);
  fColor.xyz +=  halfLambert(lightPosition3, lightColor3, v, normalVec);

  fColor.xyz = ambientColor.xyz + fColor.xyz;
  OUT.color.xyz = baseColor.xyz * fColor.xyz;
  OUT.fogInfo.xyz = fogColor;
  OUT.fogInfo.w = fogAmt;
//  OUT.color.xyz = lerp(fogColor, OUT.color.xyz, fogAmt );
  OUT.color.w = fColor.w;  
  
  return OUT;
}
